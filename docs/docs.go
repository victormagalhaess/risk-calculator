// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Victor Magalh√£es",
            "email": "hello@victordias.dev"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/healthcheck": {
            "get": {
                "description": "Healthcheck endpoint",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Healthcheck"
                ],
                "summary": "Endpoint to check the health of the application",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/risk": {
            "post": {
                "description": "Risk endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Risk"
                ],
                "summary": "Endpoint to calculate the risk of an insurance policy related to a given customer",
                "parameters": [
                    {
                        "description": "User Personal Information",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserPersonalInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.RiskProfile"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.RiskProfile": {
            "description": "Risk profile for a user",
            "type": "object",
            "properties": {
                "auto": {
                    "type": "string",
                    "example": "economic"
                },
                "disability": {
                    "type": "string",
                    "example": "regular"
                },
                "home": {
                    "type": "string",
                    "example": "ineligible"
                },
                "life": {
                    "type": "string",
                    "example": "responsible"
                }
            }
        },
        "model.UserPersonalInformation": {
            "description": "User Personal information",
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 30
                },
                "dependents": {
                    "type": "integer",
                    "example": 2
                },
                "house": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "ownership_status": "mortgaged"
                    }
                },
                "income": {
                    "type": "integer",
                    "example": 100000
                },
                "marital_status": {
                    "type": "string",
                    "example": "married"
                },
                "risk_questions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        0,
                        0
                    ]
                },
                "vehicle": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    },
                    "example": {
                        "year": 2018
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Origin Backend Take Home Assignment",
	Description:      "This is the backend application for the Origin Backend Take Home Assignment.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
